1. Системы контроля версий используются для удобства пользователя, основным преимущетсвом является возможность вернуться назад и выполнить сравнение с более ранними версиями программы(например), также есть возможность при работе в команде параллельно в разных ветках исправлять разные ошибки, а потом выполнить слияние веток
2.Основные команды для работы с Git:
git commit - для коммита - фиксации состояния репозитория
git push - обновляет удаленные ссылки, используя локальные ссылки, при этом отправляя объекты, необходимые для завершения заданных ссылок
git clean - для удаления неотслеживаемых файлов 
git pull - для интеграции с другим репозиторием или локальной веткой
git fetch - чтобы загрузить объекты и ссылки из другого репозитория
git clone - для клонирования репозитория в новый каталог
для работы с ветками используются команды:
git branch - для создания новой ветки(если новое имя написать) или для просмотра всех веток
git checkout - чтобы перейти на ветку
git merge - для слияния веток
3.Какие типы контейнеров Вам известны? Классифицируйте все имеющиеся контейнеры STL и их адаптеры.
по типу данных:
1.гомогенные - для одинаковый типов данных
2.гетерогенные - для разных типов данных
по типу организации:
1.на основе массива - vector, array, deque
2.на основе деревьев - set, multiset, map, multimap
3.узловые - list, forward_list
4.на основе hash-таблиц - unordered set, unordered map
5.адаптеры - stack, queue, priority_queue